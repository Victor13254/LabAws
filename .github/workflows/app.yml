name: CI/CD FastAPI App

on:
  push:
    branches: [ "app" ]
  pull_request:
    branches: [ "app" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests (if any)
        run: |
          # Add your test commands here
          echo "Running tests..."

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/app'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            
            # Navigate to project directory
            cd ~
            if [ ! -d LabAws/.git ]; then
                echo "Cloning repository..."
                git clone -b app https://github.com/Victor13254/LabAws.git
            fi
            
            cd LabAws
            
            # Update repository
            echo "Updating repository..."
            git fetch origin
            git reset --hard origin/app
            git clean -fd
            
            # Set up Python environment
            echo "Setting up Python environment..."
            sudo apt update
            sudo apt install -y python3 python3-venv python3-pip
            
            if [ ! -d venv ]; then
                python3 -m venv venv
            fi
            
            # Install dependencies
            echo "Installing dependencies..."
            ./venv/bin/pip install --upgrade pip
            ./venv/bin/pip install -r requirements.txt
            
            # Stop existing application
            echo "Stopping existing application..."
            pkill -f "uvicorn.*main:app" || true
            sleep 2
            
            # Start application
            echo "Starting application..."
            nohup ./venv/bin/python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload > app.log 2>&1 &
            
            echo "Deployment completed successfully!"
            
            # Wait a moment and check if app is running
            sleep 5
            if pgrep -f "uvicorn.*main:app" > /dev/null; then
                echo "Application is running successfully"
            else
                echo "Application failed to start. Check app.log for details."
                exit 1
            fi